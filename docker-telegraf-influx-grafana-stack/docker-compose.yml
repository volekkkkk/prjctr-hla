version: '3.6'
services:
  nginx:
    image: nginx
    restart: always
    volumes:
      - ./nginx/templates:/etc/nginx/templates
    env_file: configuration.env
    environment:
      - APP_SERVER=app:9091
      - ME_SERVER=mongo-express:8081
      - GRAFANA_SERVER=grafana:3000
      - NGINX_PORT=8080
    ports:
      - 8080:8080

#  elasticsearch:
#    image: elasticsearch:8.12.2

  mongo:
    image: mongo
    env_file: configuration.env

  mongo-express:
    image: mongo-express
    env_file: configuration.env
    ports:
      - 8081:8081

  app:
    build:
      context: app
    stop_signal: SIGINT
    env_file: configuration.env
    volumes:
      - ./app:/src
    depends_on:
      - mongo
#      - elasticsearch

  telegraf:
    image: telegraf:1.18-alpine
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - 8125:8125/udp

  influxdb:
    image: influxdb:1.8-alpine
    env_file: configuration.env
    ports:
      - 8086:8086
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:10.0.12
    depends_on:
      - influxdb
    env_file: configuration.env
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    links:
      - influxdb
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

volumes:
  grafana_data: {}
  influxdb_data: {}
